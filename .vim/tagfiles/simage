!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	Makefile.am	/^	    $(mkinstalldirs) "$(DESTDIR)$(bindir)"; \\$/;"	p	file:	signature:(mkinstalldirs)
$	Makefile.am	/^	    $(mkinstalldirs) "$(DESTDIR)$(libdir)"; \\$/;"	p	file:	signature:(mkinstalldirs)
$$list	Makefile.in	/^	@list='$(lib_LIBRARIES)'; for p in $$list; do \\$/;"	v
$$list	Makefile.in	/^	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \\$/;"	v
B	resize.c	177;"	d	file:
B_spline_filter	resize.c	/^B_spline_filter(float t)  \/* box (*) box (*) box (*) box *\/$/;"	f	file:	signature:(float t)
B_spline_support	resize.c	139;"	d	file:
BitmapInfo	simage_quicktime.c	/^} BitmapInfo;$/;"	t	typeref:struct:__anon8	file:
C	resize.c	178;"	d	file:
CHUNK_SIZE	simage_jpeg_reader.icc	17;"	d	file:
CLIST	resize.c	/^} CLIST;$/;"	t	typeref:struct:__anon7	file:
CONTRIB	resize.c	/^} CONTRIB;$/;"	t	typeref:struct:__anon6	file:
CVT	simage_tiff.c	186;"	d	file:
CVT	simage_tiff.c	664;"	d	file:
DirectColor	simage_xwd.c	82;"	d	file:
ERROR_MEMORY	simage_pic.c	12;"	d	file:
ERROR_NO_ERROR	simage_pic.c	9;"	d	file:
ERROR_READING_HEADER	simage_pic.c	10;"	d	file:
ERROR_READING_PALETTE	simage_pic.c	11;"	d	file:
ERROR_READ_ERROR	simage_pic.c	13;"	d	file:
ERR_BAD_DEPTH	simage_quicktime.c	16;"	d	file:
ERR_CG	simage_quicktime.c	13;"	d	file:
ERR_INIT	simage_cgimage.c	/^  ERR_INIT$/;"	e	enum:__anon3	file:
ERR_INIT	simage_gdiplus.cpp	/^  ERR_INIT$/;"	e	enum:__anon2	file:
ERR_INIT	simage_jasper.c	29;"	d	file:
ERR_JPEGLIB	simage_jpeg.c	38;"	d	file:
ERR_JPEGLIB_WRITE	simage_jpeg.c	40;"	d	file:
ERR_MEM	simage_cgimage.c	/^  ERR_MEM,$/;"	e	enum:__anon3	file:
ERR_MEM	simage_gdiplus.cpp	/^  ERR_MEM,$/;"	e	enum:__anon2	file:
ERR_MEM	simage_gif.c	/^  ERR_MEM$/;"	e	enum:__anon14	file:
ERR_MEM	simage_jasper.c	25;"	d	file:
ERR_MEM	simage_jpeg.c	37;"	d	file:
ERR_MEM	simage_png.c	17;"	d	file:
ERR_MEM	simage_qimage.cpp	24;"	d	file:
ERR_MEM	simage_quicktime.c	17;"	d	file:
ERR_MEM	simage_rgb.c	17;"	d	file:
ERR_MEM	simage_tga.c	28;"	d	file:
ERR_MEM	simage_tiff.c	21;"	d	file:
ERR_MEM_WRITE	simage_png.c	21;"	d	file:
ERR_NOT_IMPLEMENTED	simage_cgimage.c	/^  ERR_NOT_IMPLEMENTED,$/;"	e	enum:__anon3	file:
ERR_NOT_IMPLEMENTED	simage_gdiplus.cpp	/^  ERR_NOT_IMPLEMENTED,$/;"	e	enum:__anon2	file:
ERR_NOT_IMPLEMENTED	simage_jasper.c	28;"	d	file:
ERR_NO_ERROR	simage_cgimage.c	/^  ERR_NO_ERROR,$/;"	e	enum:__anon3	file:
ERR_NO_ERROR	simage_eps.c	9;"	d	file:
ERR_NO_ERROR	simage_gdiplus.cpp	/^  ERR_NO_ERROR,$/;"	e	enum:__anon2	file:
ERR_NO_ERROR	simage_gif.c	/^  ERR_NO_ERROR, $/;"	e	enum:__anon14	file:
ERR_NO_ERROR	simage_jasper.c	22;"	d	file:
ERR_NO_ERROR	simage_jpeg.c	35;"	d	file:
ERR_NO_ERROR	simage_png.c	15;"	d	file:
ERR_NO_ERROR	simage_qimage.cpp	22;"	d	file:
ERR_NO_ERROR	simage_quicktime.c	11;"	d	file:
ERR_NO_ERROR	simage_rgb.c	14;"	d	file:
ERR_NO_ERROR	simage_tga.c	25;"	d	file:
ERR_NO_ERROR	simage_tiff.c	18;"	d	file:
ERR_OPEN	simage_cgimage.c	/^  ERR_OPEN,$/;"	e	enum:__anon3	file:
ERR_OPEN	simage_gdiplus.cpp	/^  ERR_OPEN,$/;"	e	enum:__anon2	file:
ERR_OPEN	simage_gif.c	/^  ERR_OPEN, $/;"	e	enum:__anon14	file:
ERR_OPEN	simage_jasper.c	23;"	d	file:
ERR_OPEN	simage_jpeg.c	36;"	d	file:
ERR_OPEN	simage_png.c	16;"	d	file:
ERR_OPEN	simage_qimage.cpp	23;"	d	file:
ERR_OPEN	simage_quicktime.c	12;"	d	file:
ERR_OPEN	simage_rgb.c	15;"	d	file:
ERR_OPEN	simage_tga.c	26;"	d	file:
ERR_OPEN	simage_tiff.c	19;"	d	file:
ERR_OPEN_WRITE	simage_cgimage.c	/^  ERR_OPEN_WRITE,$/;"	e	enum:__anon3	file:
ERR_OPEN_WRITE	simage_eps.c	10;"	d	file:
ERR_OPEN_WRITE	simage_gdiplus.cpp	/^  ERR_OPEN_WRITE,$/;"	e	enum:__anon2	file:
ERR_OPEN_WRITE	simage_jasper.c	26;"	d	file:
ERR_OPEN_WRITE	simage_jpeg.c	39;"	d	file:
ERR_OPEN_WRITE	simage_png.c	19;"	d	file:
ERR_OPEN_WRITE	simage_rgb.c	19;"	d	file:
ERR_OPEN_WRITE	simage_tiff.c	24;"	d	file:
ERR_PNGLIB	simage_png.c	18;"	d	file:
ERR_PNGLIB_WRITE	simage_png.c	20;"	d	file:
ERR_QIMAGE_WRITE	simage_qimage.cpp	25;"	d	file:
ERR_READ	simage_cgimage.c	/^  ERR_READ,$/;"	e	enum:__anon3	file:
ERR_READ	simage_gdiplus.cpp	/^  ERR_READ,$/;"	e	enum:__anon2	file:
ERR_READ	simage_gif.c	/^  ERR_READ, $/;"	e	enum:__anon14	file:
ERR_READ	simage_jasper.c	24;"	d	file:
ERR_READ	simage_rgb.c	16;"	d	file:
ERR_READ	simage_tga.c	27;"	d	file:
ERR_READ	simage_tiff.c	20;"	d	file:
ERR_SIZEZ	simage_rgb.c	18;"	d	file:
ERR_TIFFLIB	simage_tiff.c	23;"	d	file:
ERR_UNSUPPORTED	simage_quicktime.c	15;"	d	file:
ERR_UNSUPPORTED	simage_tga.c	29;"	d	file:
ERR_UNSUPPORTED	simage_tiff.c	22;"	d	file:
ERR_UNSUPPORTED_WRITE	simage_qimage.cpp	26;"	d	file:
ERR_WRITE	simage_cgimage.c	/^  ERR_WRITE,$/;"	e	enum:__anon3	file:
ERR_WRITE	simage_gdiplus.cpp	/^  ERR_WRITE,$/;"	e	enum:__anon2	file:
ERR_WRITE	simage_gif.c	/^  ERR_WRITE, $/;"	e	enum:__anon14	file:
ERR_WRITE	simage_jasper.c	27;"	d	file:
ERR_WRITE	simage_quicktime.c	14;"	d	file:
ERR_WRITE	simage_tiff.c	25;"	d	file:
GetEncoderClsid	simage_gdiplus.cpp	/^GetEncoderClsid(const char * format, CLSID * pClsid)$/;"	f	file:	signature:(const char * format, CLSID * pClsid)
GrayScale	simage_xwd.c	78;"	d	file:
HAVE_STDLIB_H	simage_jpeg.c	18;"	d	file:
HAVE_VFW	avi_encode.c	6;"	d	file:
INT16BE	simage_xwd.c	94;"	d	file:
INT32BE	simage_xwd.c	93;"	d	file:
Image	resize.c	/^} Image;$/;"	t	typeref:struct:__anon5	file:
LIBS	Makefile.am	/^	  $(simage@SIMAGE_MAJOR_VERSION@@SUFFIX@_lib_LIBADD) $(LIBS); \\$/;"	v
LIBS	Makefile.am	/^	  $(simage@SIMAGE_MAJOR_VERSION@@SUFFIX@_lib_LIBADD) $(LIBS);$/;"	v
LOCKBITS_RECT_CAST	simage_gdiplus.cpp	32;"	d	file:
LOCKBITS_RECT_CAST	simage_gdiplus.cpp	36;"	d	file:
LSBFirst	simage_xwd.c	84;"	d	file:
Lanczos3_filter	resize.c	/^Lanczos3_filter(float t)$/;"	f	file:	signature:(float t)
Lanczos3_support	resize.c	165;"	d	file:
MAX_EXT_LEN	simage_qimage.cpp	123;"	d	file:
MSBFirst	simage_xwd.c	85;"	d	file:
M_PI	resize.c	27;"	d	file:
Mitchell_filter	resize.c	/^Mitchell_filter(float t)$/;"	f	file:	signature:(float t)
Mitchell_support	resize.c	175;"	d	file:
OUTPUT_BUF_SIZE	simage_jpeg_writer.icc	23;"	d	file:
PACKAGE	simage_jasper.c	12;"	d	file:
PACKAGE_BUGREPORT	simage_jasper.c	13;"	d	file:
PACKAGE_NAME	simage_jasper.c	14;"	d	file:
PACKAGE_STRING	simage_jasper.c	15;"	d	file:
PACKAGE_TARNAME	simage_jasper.c	16;"	d	file:
PACKAGE_VERSION	simage_jasper.c	17;"	d	file:
PseudoColor	simage_xwd.c	80;"	d	file:
QT4	simage_qimage.cpp	12;"	d	file:
QT4	simage_qimage.cpp	14;"	d	file:
ROWLEN	simage_eps.c	120;"	d	file:
ROWLEN	simage_eps.c	239;"	d	file:
SIMAGE_ERROR_BUFSIZE	simage.c	270;"	d	file:
SIMAGE_ERROR_BUFSIZE	simage_write.c	411;"	d	file:
StaticColor	simage_xwd.c	79;"	d	file:
StaticGray	simage_xwd.c	77;"	d	file:
TrueColor	simage_xwd.c	81;"	d	file:
ULONG_PTR	simage_gdiplus.cpp	21;"	d	file:
VERSION	simage_jasper.c	18;"	d	file:
XWD_COFF_BLUE	simage_xwd.c	59;"	d	file:
XWD_COFF_FLAGS	simage_xwd.c	60;"	d	file:
XWD_COFF_GREEN	simage_xwd.c	58;"	d	file:
XWD_COFF_PIXEL	simage_xwd.c	56;"	d	file:
XWD_COFF_RED	simage_xwd.c	57;"	d	file:
XWD_COLOR_SIZE	simage_xwd.c	26;"	d	file:
XWD_FILE_OPEN_ERROR	simage_xwd.c	67;"	d	file:
XWD_FILE_READ_ERROR	simage_xwd.c	68;"	d	file:
XWD_FILE_STAT_ERROR	simage_xwd.c	66;"	d	file:
XWD_HEADER_SIZE	simage_xwd.c	25;"	d	file:
XWD_HOFF_BITMAP_BITORDER	simage_xwd.c	38;"	d	file:
XWD_HOFF_BITMAP_PAD	simage_xwd.c	39;"	d	file:
XWD_HOFF_BITMAP_UNIT	simage_xwd.c	37;"	d	file:
XWD_HOFF_BITS_PER_PIXEL	simage_xwd.c	40;"	d	file:
XWD_HOFF_BITS_PER_RGB	simage_xwd.c	46;"	d	file:
XWD_HOFF_BLUE_MASK	simage_xwd.c	45;"	d	file:
XWD_HOFF_BYTEORDER	simage_xwd.c	36;"	d	file:
XWD_HOFF_BYTES_PER_LINE	simage_xwd.c	41;"	d	file:
XWD_HOFF_COLORMAP_ENTRIES	simage_xwd.c	47;"	d	file:
XWD_HOFF_DEPTH	simage_xwd.c	32;"	d	file:
XWD_HOFF_FILE_VERSION	simage_xwd.c	30;"	d	file:
XWD_HOFF_FORMAT	simage_xwd.c	31;"	d	file:
XWD_HOFF_GREEN_MASK	simage_xwd.c	44;"	d	file:
XWD_HOFF_HEADER_SIZE	simage_xwd.c	29;"	d	file:
XWD_HOFF_HEIGHT	simage_xwd.c	34;"	d	file:
XWD_HOFF_NUM_COLORS	simage_xwd.c	48;"	d	file:
XWD_HOFF_RED_MASK	simage_xwd.c	43;"	d	file:
XWD_HOFF_VISUAL_CLASS	simage_xwd.c	42;"	d	file:
XWD_HOFF_WIDTH	simage_xwd.c	33;"	d	file:
XWD_HOFF_WINDOW_BORDERWIDTH	simage_xwd.c	53;"	d	file:
XWD_HOFF_WINDOW_HEIGHT	simage_xwd.c	50;"	d	file:
XWD_HOFF_WINDOW_WIDTH	simage_xwd.c	49;"	d	file:
XWD_HOFF_WINDOW_X	simage_xwd.c	51;"	d	file:
XWD_HOFF_WINDOW_Y	simage_xwd.c	52;"	d	file:
XWD_HOFF_XOFFSET	simage_xwd.c	35;"	d	file:
XWD_MALLOC_ERROR	simage_xwd.c	69;"	d	file:
XWD_NO_ERROR	simage_xwd.c	65;"	d	file:
XWD_NO_SUPPORT_ERROR	simage_xwd.c	70;"	d	file:
XYBitmap	simage_xwd.c	87;"	d	file:
XYPixmap	simage_xwd.c	88;"	d	file:
ZPixmap	simage_xwd.c	89;"	d	file:
__anon10::current_section	simage_oggvorbis_reader.c	/^  int current_section;$/;"	m	struct:__anon10	file:	access:public
__anon10::file	simage_oggvorbis_reader.c	/^  FILE *file;$/;"	m	struct:__anon10	file:	access:public
__anon10::vorbisfile	simage_oggvorbis_reader.c	/^  OggVorbis_File vorbisfile;$/;"	m	struct:__anon10	file:	access:public
__anon11::compressed	simage_rgb.c	/^  int compressed;$/;"	m	struct:__anon11	file:	access:public
__anon11::h	simage_rgb.c	/^  int h;$/;"	m	struct:__anon11	file:	access:public
__anon11::in	simage_rgb.c	/^  FILE * in;$/;"	m	struct:__anon11	file:	access:public
__anon11::nc	simage_rgb.c	/^  int nc;$/;"	m	struct:__anon11	file:	access:public
__anon11::rlebuf	simage_rgb.c	/^  unsigned char * rlebuf;$/;"	m	struct:__anon11	file:	access:public
__anon11::rlebuflen	simage_rgb.c	/^  int rlebuflen;$/;"	m	struct:__anon11	file:	access:public
__anon11::rowlen	simage_rgb.c	/^  int * rowlen;$/;"	m	struct:__anon11	file:	access:public
__anon11::rowseek	simage_rgb.c	/^  unsigned int * rowseek;$/;"	m	struct:__anon11	file:	access:public
__anon11::tmpbuf	simage_rgb.c	/^  unsigned char * tmpbuf[4];$/;"	m	struct:__anon11	file:	access:public
__anon11::w	simage_rgb.c	/^  int w;$/;"	m	struct:__anon11	file:	access:public
__anon12::bitspersample	simage_tiff.c	/^  uint16 bitspersample;$/;"	m	struct:__anon12	file:	access:public
__anon12::blue	simage_tiff.c	/^  uint16 * blue;$/;"	m	struct:__anon12	file:	access:public
__anon12::config	simage_tiff.c	/^  uint16 config;$/;"	m	struct:__anon12	file:	access:public
__anon12::format	simage_tiff.c	/^  int format;$/;"	m	struct:__anon12	file:	access:public
__anon12::green	simage_tiff.c	/^  uint16 * green;$/;"	m	struct:__anon12	file:	access:public
__anon12::h	simage_tiff.c	/^  uint32 w, h;$/;"	m	struct:__anon12	file:	access:public
__anon12::in	simage_tiff.c	/^  TIFF * in;$/;"	m	struct:__anon12	file:	access:public
__anon12::inbuf	simage_tiff.c	/^  unsigned char * inbuf;$/;"	m	struct:__anon12	file:	access:public
__anon12::photometric	simage_tiff.c	/^  uint16 photometric;$/;"	m	struct:__anon12	file:	access:public
__anon12::red	simage_tiff.c	/^  uint16 * red;$/;"	m	struct:__anon12	file:	access:public
__anon12::rowsize	simage_tiff.c	/^  int rowsize;$/;"	m	struct:__anon12	file:	access:public
__anon12::samplesperpixel	simage_tiff.c	/^  uint16 samplesperpixel;$/;"	m	struct:__anon12	file:	access:public
__anon12::w	simage_tiff.c	/^  uint32 w, h;$/;"	m	struct:__anon12	file:	access:public
__anon13::buffer	simage_jpeg_reader.icc	/^  JOCTET * buffer;$/;"	m	struct:__anon13	file:	access:public
__anon13::infile	simage_jpeg_reader.icc	/^  FILE * infile;$/;"	m	struct:__anon13	file:	access:public
__anon13::pub	simage_jpeg_reader.icc	/^  struct jpeg_source_mgr pub;$/;"	m	struct:__anon13	typeref:struct:__anon13::jpeg_source_mgr	file:	access:public
__anon13::start_of_file	simage_jpeg_reader.icc	/^  boolean start_of_file;$/;"	m	struct:__anon13	file:	access:public
__anon15::buffer	simage_jpeg_writer.icc	/^  JOCTET * buffer;		\/* start of buffer *\/$/;"	m	struct:__anon15	file:	access:public
__anon15::outfile	simage_jpeg_writer.icc	/^  FILE * outfile;		\/* target stream *\/$/;"	m	struct:__anon15	file:	access:public
__anon15::pub	simage_jpeg_writer.icc	/^  struct jpeg_destination_mgr pub; \/* public fields *\/$/;"	m	struct:__anon15	typeref:struct:__anon15::jpeg_destination_mgr	file:	access:public
__anon16::depth	simage_jasper.c	/^  int depth;  $/;"	m	struct:__anon16	file:	access:public
__anon16::height	simage_jasper.c	/^  int height;$/;"	m	struct:__anon16	file:	access:public
__anon16::numcomp	simage_jasper.c	/^  int numcomp;$/;"	m	struct:__anon16	file:	access:public
__anon16::width	simage_jasper.c	/^  int width;$/;"	m	struct:__anon16	file:	access:public
__anon1::file	simage_libsndfile.c	/^  SNDFILE *file;$/;"	m	struct:__anon1	file:	access:public
__anon1::sfinfo	simage_libsndfile.c	/^  SF_INFO sfinfo;$/;"	m	struct:__anon1	file:	access:public
__anon1::tempbuffer	simage_libsndfile.c	/^  double *tempbuffer;$/;"	m	struct:__anon1	file:	access:public
__anon1::tempbuffersize	simage_libsndfile.c	/^  int tempbuffersize;$/;"	m	struct:__anon1	file:	access:public
__anon5::bpp	resize.c	/^  int bpp;              \/* bytes per pixel *\/$/;"	m	struct:__anon5	file:	access:public
__anon5::data	resize.c	/^  unsigned char * data; \/* pointer to first scanline of image *\/$/;"	m	struct:__anon5	file:	access:public
__anon5::span	resize.c	/^  int span;             \/* byte offset between two scanlines *\/$/;"	m	struct:__anon5	file:	access:public
__anon5::xsize	resize.c	/^  int xsize;            \/* horizontal size of the image in Pixels *\/$/;"	m	struct:__anon5	file:	access:public
__anon5::ysize	resize.c	/^  int ysize;            \/* vertical size of the image in Pixels *\/$/;"	m	struct:__anon5	file:	access:public
__anon6::pixel	resize.c	/^  int pixel;$/;"	m	struct:__anon6	file:	access:public
__anon6::weight	resize.c	/^  float weight;$/;"	m	struct:__anon6	file:	access:public
__anon7::n	resize.c	/^  int	n;		\/* number of contributors *\/$/;"	m	struct:__anon7	file:	access:public
__anon7::p	resize.c	/^  CONTRIB * p;		\/* pointer to list of contributions *\/$/;"	m	struct:__anon7	file:	access:public
__anon8::bitsPerPixel	simage_quicktime.c	/^  size_t bitsPerPixel;$/;"	m	struct:__anon8	file:	access:public
__anon8::bytesPerRow	simage_quicktime.c	/^  size_t bytesPerRow;$/;"	m	struct:__anon8	file:	access:public
__anon8::data	simage_quicktime.c	/^  unsigned char * data;$/;"	m	struct:__anon8	file:	access:public
__anon8::height	simage_quicktime.c	/^  size_t height;$/;"	m	struct:__anon8	file:	access:public
__anon8::numcomponents	simage_quicktime.c	/^  size_t numcomponents;$/;"	m	struct:__anon8	file:	access:public
__anon8::size	simage_quicktime.c	/^  size_t size;$/;"	m	struct:__anon8	file:	access:public
__anon8::width	simage_quicktime.c	/^  size_t width;$/;"	m	struct:__anon8	file:	access:public
__anon9::framenumber	avi_encode.c	/^  int framenumber;$/;"	m	struct:__anon9	file:	access:public
__anon9::height	avi_encode.c	/^  int height;$/;"	m	struct:__anon9	file:	access:public
__anon9::pfile	avi_encode.c	/^  PAVIFILE pfile; $/;"	m	struct:__anon9	file:	access:public
__anon9::ps	avi_encode.c	/^  PAVISTREAM ps;$/;"	m	struct:__anon9	file:	access:public
__anon9::pscomp	avi_encode.c	/^  PAVISTREAM pscomp;$/;"	m	struct:__anon9	file:	access:public
__anon9::width	avi_encode.c	/^  int width;$/;"	m	struct:__anon9	file:	access:public
_loader_data	simage.c	/^struct _loader_data$/;"	s	file:
_loader_data::funcs	simage.c	/^  struct simage_plugin funcs;$/;"	m	struct:_loader_data	typeref:struct:_loader_data::simage_plugin	file:	access:public
_loader_data::is_internal	simage.c	/^  int is_internal;$/;"	m	struct:_loader_data	file:	access:public
_loader_data::next	simage.c	/^  struct _loader_data *next;$/;"	m	struct:_loader_data	typeref:struct:_loader_data::_loader_data	file:	access:public
_loader_data::openfuncs	simage.c	/^  struct simage_open_funcs openfuncs;$/;"	m	struct:_loader_data	typeref:struct:_loader_data::simage_open_funcs	file:	access:public
_saver_data	simage_write.c	/^struct _saver_data$/;"	s	file:
_saver_data::description	simage_write.c	/^  char * description;$/;"	m	struct:_saver_data	file:	access:public
_saver_data::error_func	simage_write.c	/^  int (*error_func)(char * textbuffer, int bufferlen);$/;"	m	struct:_saver_data	file:	access:public
_saver_data::extensions	simage_write.c	/^  char * extensions;$/;"	m	struct:_saver_data	file:	access:public
_saver_data::fullname	simage_write.c	/^  char * fullname;$/;"	m	struct:_saver_data	file:	access:public
_saver_data::is_internal	simage_write.c	/^  int is_internal;$/;"	m	struct:_saver_data	file:	access:public
_saver_data::next	simage_write.c	/^  struct _saver_data * next;$/;"	m	struct:_saver_data	typeref:struct:_saver_data::_saver_data	file:	access:public
_saver_data::save_func	simage_write.c	/^  int (*save_func)(const char * name, const unsigned char * bytes,$/;"	m	struct:_saver_data	file:	access:public
_saver_data::save_func_ext	simage_write.c	/^  int (*save_func_ext)(const char * name, const unsigned char * bytes,$/;"	m	struct:_saver_data	file:	access:public
add_double_param	params.c	/^add_double_param(s_params * params, const char * name, double val)$/;"	f	file:	signature:(s_params * params, const char * name, double val)
add_float_param	params.c	/^add_float_param(s_params * params, const char * name, float val)$/;"	f	file:	signature:(s_params * params, const char * name, float val)
add_function_param	params.c	/^add_function_param(s_params * params, const char * name, void (*val)())$/;"	f	file:	signature:(s_params * params, const char * name, void (*val)())
add_integer_param	params.c	/^add_integer_param(s_params * params, const char * name, int val)$/;"	f	file:	signature:(s_params * params, const char * name, int val)
add_internal_exporters	movie.c	/^add_internal_exporters(void)$/;"	f	file:	signature:(void)
add_internal_exporters	stream.c	/^add_internal_exporters(void)$/;"	f	file:	signature:(void)
add_internal_importers	movie.c	/^add_internal_importers(void)$/;"	f	file:	signature:(void)
add_internal_importers	stream.c	/^add_internal_importers(void)$/;"	f	file:	signature:(void)
add_internal_loaders	simage.c	/^add_internal_loaders(void)$/;"	f	file:	signature:(void)
add_internal_savers	simage_write.c	/^add_internal_savers(void)$/;"	f	file:	signature:(void)
add_loader	simage.c	/^add_loader(loader_data *loader,$/;"	f	file:	signature:(loader_data *loader, unsigned char *(*load_func)(const char *, int *, int *, int *), int (*identify_func)(const char *, const unsigned char *, int headerlen), int (*error_func)(char *, int), int is_internal, int addbefore)
add_pointer_param	params.c	/^add_pointer_param(s_params * params, const char * name, void * val)$/;"	f	file:	signature:(s_params * params, const char * name, void * val)
add_saver	simage_write.c	/^add_saver(saver_data * saver,$/;"	f	file:	signature:(saver_data * saver, int (*save_func)(const char *, const unsigned char *, int, int, int), int (*error_func)(char *, int), const char * extensions, const char * fullname, const char * description, int is_internal, int addbefore)
add_saver_data	simage_write.c	/^add_saver_data(saver_data * saver,$/;"	f	file:	signature:(saver_data * saver, int (*error_func)(char *, int), const char * extensions, const char * fullname, const char * description, int is_internal, int addbefore)
add_saver_ext	simage_write.c	/^add_saver_ext(saver_data * saver,$/;"	f	file:	signature:(saver_data * saver, int (*save_func)(const char *, const unsigned char *, int, int, int, const char *), int (*error_func)(char *, int), const char * extensions, const char * fullname, const char * description, int is_internal, int addbefore)
add_string_param	params.c	/^add_string_param(s_params * params, const char * name,  const char * val)$/;"	f	file:	signature:(s_params * params, const char * name, const char * val)
argb_to_rgba	simage_quicktime.c	/^argb_to_rgba(uint32_t * px, int width, int height) $/;"	f	file:	signature:(uint32_t * px, int width, int height)
avi_begin_encode	avi_encode.c	/^avi_begin_encode(const char *filename, int width, int height, int fps, const char *preferences_filename)$/;"	f	signature:(const char *filename, int width, int height, int fps, const char *preferences_filename)
avi_cleanup_context	avi_encode.c	/^static void avi_cleanup_context(avi_encode_context *context)$/;"	f	file:	signature:(avi_encode_context *context)
avi_encode_bitmap	avi_encode.c	/^avi_encode_bitmap(void *handle, unsigned char *buf, int rgb2bgr)$/;"	f	signature:(void *handle, unsigned char *buf, int rgb2bgr)
avi_encode_context	avi_encode.c	/^} avi_encode_context;$/;"	t	typeref:struct:__anon9	file:
avi_end_encode	avi_encode.c	/^avi_end_encode(void *handle)$/;"	f	signature:(void *handle)
avi_init_context	avi_encode.c	/^static void avi_init_context(avi_encode_context *context)$/;"	f	file:	signature:(avi_encode_context *context)
avienc_movie_close	simage_avi.c	/^avienc_movie_close(s_movie * movie)$/;"	f	signature:(s_movie * movie)
avienc_movie_create	simage_avi.c	/^avienc_movie_create(const char * filename, s_movie * movie, s_params * params)$/;"	f	signature:(const char * filename, s_movie * movie, s_params * params)
avienc_movie_put	simage_avi.c	/^avienc_movie_put(s_movie * movie, s_image * image, s_params * params)$/;"	f	signature:(s_movie * movie, s_image * image, s_params * params)
bell_filter	resize.c	/^bell_filter(float t)		\/* box (*) box (*) box *\/$/;"	f	file:	signature:(float t)
bell_support	resize.c	125;"	d	file:
bitsPerPixel	simage_quicktime.c	/^  size_t bitsPerPixel;$/;"	m	struct:__anon8	file:	access:public
bitspersample	simage_tiff.c	/^  uint16 bitspersample;$/;"	m	struct:__anon12	file:	access:public
blue	simage_tiff.c	/^  uint16 * blue;$/;"	m	struct:__anon12	file:	access:public
box_filter	resize.c	/^box_filter(float t)$/;"	f	file:	signature:(float t)
box_support	resize.c	106;"	d	file:
bpp	resize.c	/^  int bpp;              \/* bytes per pixel *\/$/;"	m	struct:__anon5	file:	access:public
buffer	simage_jpeg_reader.icc	/^  JOCTET * buffer;$/;"	m	struct:__anon13	file:	access:public
buffer	simage_jpeg_writer.icc	/^  JOCTET * buffer;		\/* start of buffer *\/$/;"	m	struct:__anon15	file:	access:public
bytesPerRow	simage_quicktime.c	/^  size_t bytesPerRow;$/;"	m	struct:__anon8	file:	access:public
cc_basename	simage_quicktime.c	/^cc_basename(const char * path)$/;"	f	file:	signature:(const char * path)
cc_dirname	simage_quicktime.c	/^cc_dirname(const char * path) $/;"	f	file:	signature:(const char * path)
cfstring_append_ostype	simage_quicktime.c	/^cfstring_append_ostype(CFMutableStringRef str, OSType * t) $/;"	f	file:	signature:(CFMutableStringRef str, OSType * t)
cgimage_loader	simage.c	/^static loader_data cgimage_loader;$/;"	v	file:
cgimageerror	simage_cgimage.c	/^static int cgimageerror = ERR_NO_ERROR;$/;"	v	file:
checkcmap	simage_tiff.c	/^checkcmap(int n, uint16* r, uint16* g, uint16* b)$/;"	f	file:	signature:(int n, uint16* r, uint16* g, uint16* b)
close	movie.c	/^  s_movie_close_func * close;  $/;"	m	struct:simage_movie_exporter	file:	access:public
close	movie.c	/^  s_movie_close_func * close;  $/;"	m	struct:simage_movie_importer	file:	access:public
close	movie.c	/^  s_movie_close_func * close;$/;"	m	struct:simage_movie_s	file:	access:public
close	stream.c	/^  s_stream_close_func * close;  $/;"	m	struct:simage_stream_exporter	file:	access:public
close	stream.c	/^  s_stream_close_func * close;  $/;"	m	struct:simage_stream_importer	file:	access:public
close	stream.c	/^  s_stream_close_func * close;$/;"	m	struct:simage_stream_s	file:	access:public
cnt_bits	simage.c	/^cnt_bits(int val, int * highbit)$/;"	f	file:	signature:(int val, int * highbit)
compressed	simage_rgb.c	/^  int compressed;$/;"	m	struct:__anon11	file:	access:public
config	simage_tiff.c	/^  uint16 config;$/;"	m	struct:__anon12	file:	access:public
context	stream.c	/^  void *context;$/;"	m	struct:simage_stream_s	file:	access:public
convert_16_to_24	simage_tga.c	/^convert_16_to_24(const unsigned char * const src, unsigned char * const dest)$/;"	f	file:	signature:(const unsigned char * const src, unsigned char * const dest)
convert_16_to_32	simage_tga.c	/^convert_16_to_32(const unsigned char * const src, unsigned char * const dest)$/;"	f	file:	signature:(const unsigned char * const src, unsigned char * const dest)
convert_24_to_24	simage_tga.c	/^convert_24_to_24(const unsigned char * const src, unsigned char * const dest)$/;"	f	file:	signature:(const unsigned char * const src, unsigned char * const dest)
convert_32_to_32	simage_tga.c	/^convert_32_to_32(const unsigned char * const src, unsigned char * const dest)$/;"	f	file:	signature:(const unsigned char * const src, unsigned char * const dest)
convert_data	simage_tga.c	/^convert_data(const unsigned char * const src, unsigned char * const dest, $/;"	f	file:	signature:(const unsigned char * const src, unsigned char * const dest, const int x, const int srcformat, const int destformat)
copy16bppGrayScaleBuffer	simage_gdiplus.cpp	/^copy16bppGrayScaleBuffer(unsigned char * src, unsigned int width,$/;"	f	file:	signature:(unsigned char * src, unsigned int width, unsigned int height, unsigned int stride)
copy32bppGrayScaleBuffer	simage_gdiplus.cpp	/^copy32bppGrayScaleBuffer(unsigned char * src, unsigned int width, $/;"	f	file:	signature:(unsigned char * src, unsigned int width, unsigned int height, unsigned int stride)
copyImageBuffer	simage_gdiplus.cpp	/^copyImageBuffer(unsigned char * src, unsigned int width, $/;"	f	file:	signature:(unsigned char * src, unsigned int width, unsigned int height, unsigned int numcomponents, unsigned int stride)
copyScanline	simage_jpeg.c	/^copyScanline(unsigned char *currPtr, unsigned char *from, int cnt)$/;"	f	file:	signature:(unsigned char *currPtr, unsigned char *from, int cnt)
copy_row	simage_tiff.c	/^copy_row(unsigned char *ptr, unsigned char *data, int n, int numcomponents)$/;"	f	file:	signature:(unsigned char *ptr, unsigned char *data, int n, int numcomponents)
create	movie.c	/^  s_movie_create_func * create;$/;"	m	struct:simage_movie_exporter	file:	access:public
create	movie.c	/^  s_movie_create_func * create;$/;"	m	struct:simage_movie_s	file:	access:public
create	stream.c	/^  s_stream_create_func * create;$/;"	m	struct:simage_stream_exporter	file:	access:public
create	stream.c	/^  s_stream_create_func * create;$/;"	m	struct:simage_stream_s	file:	access:public
create_file	simage_quicktime.c	/^create_file(const char * filename, FSSpec * fss) $/;"	f	file:	signature:(const char * filename, FSSpec * fss)
create_image_source	simage_cgimage.c	/^create_image_source(const char * file)$/;"	f	file:	signature:(const char * file)
current_section	simage_oggvorbis_reader.c	/^  int current_section;$/;"	m	struct:__anon10	file:	access:public
data	params.c	/^  } data;$/;"	m	struct:simage_param_data	typeref:union:simage_param_data::__anon4	file:	access:public
data	resize.c	/^  unsigned char * data; \/* pointer to first scanline of image *\/$/;"	m	struct:__anon5	file:	access:public
data	simage_quicktime.c	/^  unsigned char * data;$/;"	m	struct:__anon8	file:	access:public
decode_row	simage_gif.c	/^decode_row(GifFileType * giffile, $/;"	f	file:	signature:(GifFileType * giffile, unsigned char * buffer, unsigned char * rowdata, int x, int y, int len, int transparent)
depth	simage_jasper.c	/^  int depth;  $/;"	m	struct:__anon16	file:	access:public
description	simage_write.c	/^  char * description;$/;"	m	struct:_saver_data	file:	access:public
dlclose	simage.c	/^static s_dlclose_func *dlclose = NULL;$/;"	v	file:
dlopen	simage.c	/^static s_dlopen_func *dlopen = NULL;$/;"	v	file:
dlsym	simage.c	/^static s_dlsym_func *dlsym = NULL;$/;"	v	file:
done	Makefile.am	/^	done;$/;"	v
doubledata	params.c	/^    double doubledata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
echo	Makefile.am	/^	    echo " rm -f" "$$file"; \\$/;"	v
empty_output_buffer	simage_jpeg_writer.icc	/^empty_output_buffer(j_compress_ptr cinfo)$/;"	f	file:	signature:(j_compress_ptr cinfo)
encode_ascii85	simage_eps.c	/^encode_ascii85(const unsigned char * in, unsigned char * out)$/;"	f	file:	signature:(const unsigned char * in, unsigned char * out)
eps_saver	simage_write.c	/^static saver_data eps_saver;$/;"	v	file:
epserror	simage_eps.c	/^static int epserror = ERR_NO_ERROR;$/;"	v	file:
epsext	simage_write.c	/^static char epsext[] = "eps,ps";$/;"	v	file:
epsfull	simage_write.c	/^static const char epsfull[] ="Encapsulated postscript";$/;"	v	file:
err_callback	simage_png.c	/^err_callback(png_structp ps, png_const_charp pc)$/;"	f	file:	signature:(png_structp ps, png_const_charp pc)
error_func	simage_write.c	/^  int (*error_func)(char * textbuffer, int bufferlen);$/;"	m	struct:_saver_data	file:	access:public
exporters	movie.c	/^static struct simage_movie_exporter * exporters;$/;"	v	typeref:struct:simage_movie_exporter	file:
exporters	stream.c	/^static struct simage_stream_exporter * exporters;$/;"	v	typeref:struct:simage_stream_exporter	file:
extensions	simage_write.c	/^  char * extensions;$/;"	m	struct:_saver_data	file:	access:public
f	Makefile.in	/^	    f="`echo $$p | sed -e 's|^.*\/||'`"; \\$/;"	v
file	simage_libsndfile.c	/^  SNDFILE *file;$/;"	m	struct:__anon1	file:	access:public
file	simage_oggvorbis_reader.c	/^  FILE *file;$/;"	m	struct:__anon10	file:	access:public
filename	movie.c	/^  char * filename;$/;"	m	struct:simage_movie_s	file:	access:public
filename	stream.c	/^  char * filename;$/;"	m	struct:simage_stream_s	file:	access:public
fill_input_buffer	simage_jpeg_reader.icc	/^fill_input_buffer(j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
filter	resize.c	/^filter(float t)$/;"	f	file:	signature:(float t)
filter_support	resize.c	95;"	d	file:
find_loader	simage.c	/^find_loader(const char *filename)$/;"	f	file:	signature:(const char *filename)
find_param	params.c	/^find_param(s_params * params, const char * name, int type, int allocnew)$/;"	f	file:	signature:(s_params * params, const char * name, int type, int allocnew)
find_saver	simage_write.c	/^find_saver(const char * filenameextension)$/;"	f	file:	signature:(const char * filenameextension)
first_loader	simage.c	/^static loader_data *first_loader = NULL;$/;"	v	file:
first_saver	simage_write.c	/^static saver_data * first_saver = NULL;$/;"	v	file:
floatdata	params.c	/^    float floatdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
flush_ascii85	simage_eps.c	/^flush_ascii85(FILE * fp,$/;"	f	file:	signature:(FILE * fp, unsigned char * tuple, unsigned char * linebuf, int * tuplecnt, int * linecnt, int rowlen)
format	simage_tiff.c	/^  int format;$/;"	m	struct:__anon12	file:	access:public
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
framenumber	avi_encode.c	/^  int framenumber;$/;"	m	struct:__anon9	file:	access:public
fullname	simage_write.c	/^  char * fullname;$/;"	m	struct:_saver_data	file:	access:public
funcs	simage.c	/^  struct simage_plugin funcs;$/;"	m	struct:_loader_data	typeref:struct:_loader_data::simage_plugin	file:	access:public
functiondata	params.c	/^    void (*functiondata)();$/;"	m	union:simage_param_data::__anon4	file:	access:public
gdiplus_init	simage_gdiplus.cpp	/^gdiplus_init(void) $/;"	f	file:	signature:(void)
gdiplus_loader	simage.c	/^static loader_data gdiplus_loader;$/;"	v	file:
gdipluserror	simage_gdiplus.cpp	/^static int gdipluserror = ERR_NO_ERROR;$/;"	v	file:
get	movie.c	/^  s_movie_get_func * get;$/;"	m	struct:simage_movie_importer	file:	access:public
get	movie.c	/^  s_movie_get_func * get;$/;"	m	struct:simage_movie_s	file:	access:public
get	stream.c	/^  s_stream_get_func * get;$/;"	m	struct:simage_stream_importer	file:	access:public
get	stream.c	/^  s_stream_get_func * get;$/;"	m	struct:simage_stream_s	file:	access:public
getInt16	simage_tga.c	/^static int getInt16(unsigned char *ptr)$/;"	f	file:	signature:(unsigned char *ptr)
getReadFormat	simage_gdiplus.cpp	/^getReadFormat(Gdiplus::Bitmap & bitmap, bool & grayscale)$/;"	f	file:	signature:(Gdiplus::Bitmap & bitmap, bool & grayscale)
get_column	resize.c	/^get_column(unsigned char * column, Image * image, int x)$/;"	f	file:	signature:(unsigned char * column, Image * image, int x)
get_importer	simage_quicktime.c	/^get_importer(const char * filename, GraphicsImportComponent * c) $/;"	f	file:	signature:(const char * filename, GraphicsImportComponent * c)
get_row	resize.c	/^get_row(unsigned char * row, Image * image, int y)$/;"	f	file:	signature:(unsigned char * row, Image * image, int y)
getuint16be	simage_xwd.c	/^unsigned long getuint16be( const unsigned char * data ) { return INT16BE(data); }$/;"	f	signature:( const unsigned char * data )
getuint32be	simage_xwd.c	/^unsigned long getuint32be( const unsigned char * data ) { return INT32BE(data); }$/;"	f	signature:( const unsigned char * data )
gif_loader	simage.c	/^static loader_data gif_loader;$/;"	v	file:
gif_saver	simage_write.c	/^static saver_data gif_saver;$/;"	v	file:
giferror	simage_gif.c	/^static int giferror = ERR_NO_ERROR;$/;"	v	file:
gifext	simage_write.c	/^static char gifext[] = "gif";$/;"	v	file:
giffull	simage_write.c	/^static const char giffull[] = "The Graphics Interchange Format";$/;"	v	file:
green	simage_tiff.c	/^  uint16 * green;$/;"	m	struct:__anon12	file:	access:public
h	simage_rgb.c	/^  int h;$/;"	m	struct:__anon11	file:	access:public
h	simage_tiff.c	/^  uint32 w, h;$/;"	m	struct:__anon12	file:	access:public
height	avi_encode.c	/^  int height;$/;"	m	struct:__anon9	file:	access:public
height	simage_jasper.c	/^  int height;$/;"	m	struct:__anon16	file:	access:public
height	simage_quicktime.c	/^  size_t height;$/;"	m	struct:__anon8	file:	access:public
importers	movie.c	/^static struct simage_movie_importer * importers;$/;"	v	typeref:struct:simage_movie_importer	file:
importers	stream.c	/^static struct simage_stream_importer * importers;$/;"	v	typeref:struct:simage_stream_importer	file:
in	Makefile.am	/^	for file in \\$/;"	v
in	simage_rgb.c	/^  FILE * in;$/;"	m	struct:__anon11	file:	access:public
in	simage_tiff.c	/^  TIFF * in;$/;"	m	struct:__anon12	file:	access:public
inbuf	simage_tiff.c	/^  unsigned char * inbuf;$/;"	m	struct:__anon12	file:	access:public
infile	simage_jpeg_reader.icc	/^  FILE * infile;$/;"	m	struct:__anon13	file:	access:public
init_destination	simage_jpeg_writer.icc	/^init_destination(j_compress_ptr cinfo)$/;"	f	file:	signature:(j_compress_ptr cinfo)
init_source	simage_jpeg_reader.icc	/^init_source(j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
input_source_mgr	simage_jpeg_reader.icc	/^} input_source_mgr;$/;"	t	typeref:struct:__anon13	file:
integerdata	params.c	/^    int integerdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
interleave_row	simage_tiff.c	/^interleave_row(unsigned char *ptr,$/;"	f	file:	signature:(unsigned char *ptr, unsigned char *red, unsigned char *blue, unsigned char *green, unsigned char *alpha, int n)
invert_row	simage_tiff.c	/^invert_row(unsigned char *ptr, unsigned char *data, int n, int invert)$/;"	f	file:	signature:(unsigned char *ptr, unsigned char *data, int n, int invert)
is_internal	simage.c	/^  int is_internal;$/;"	m	struct:_loader_data	file:	access:public
is_internal	simage_write.c	/^  int is_internal;$/;"	m	struct:_saver_data	file:	access:public
jasper_copy_matrix	simage_jasper.c	/^static void jasper_copy_matrix(unsigned char * buffer, $/;"	f	file:	signature:(unsigned char * buffer, jas_matrix_t * data, int w, int h, int bits, int component, int numcomp)
jasper_init	simage_jasper.c	/^static int jasper_init(void) $/;"	f	file:	signature:(void)
jasper_loader	simage.c	/^static loader_data jasper_loader;$/;"	v	file:
jaspererror	simage_jasper.c	/^static int jaspererror = ERR_NO_ERROR;$/;"	v	file:
jpeg_loader	simage.c	/^static loader_data jpeg_loader;$/;"	v	file:
jpeg_saver	simage_write.c	/^static saver_data jpeg_saver;$/;"	v	file:
jpegerror	simage_jpeg.c	/^static int jpegerror = ERR_NO_ERROR;$/;"	v	file:
jpegext	simage_write.c	/^static char jpegext[] = "jpg,jpeg";$/;"	v	file:
jpegfull	simage_write.c	/^static const char jpegfull[] = "The Independent JPEG Group file format";$/;"	v	file:
last_loader	simage.c	/^static loader_data *last_loader = NULL;$/;"	v	file:
last_saver	simage_write.c	/^static saver_data * last_saver = NULL;$/;"	v	file:
lib	Makefile.am	/^	for ext in lib; do \\$/;"	v
libsndfile_cleanup_context	simage_libsndfile.c	/^libsndfile_cleanup_context(libsndfile_context *context)$/;"	f	file:	signature:(libsndfile_context *context)
libsndfile_context	simage_libsndfile.c	/^} libsndfile_context;$/;"	t	typeref:struct:__anon1	file:
libsndfile_init_context	simage_libsndfile.c	/^libsndfile_init_context(libsndfile_context *context)$/;"	f	file:	signature:(libsndfile_context *context)
libsndfile_stream_close	simage_libsndfile.c	/^libsndfile_stream_close(s_stream * stream)$/;"	f	signature:(s_stream * stream)
libsndfile_stream_get	simage_libsndfile.c	/^libsndfile_stream_get(s_stream * stream, void * buffer, int * size, s_params * params)$/;"	f	signature:(s_stream * stream, void * buffer, int * size, s_params * params)
libsndfile_stream_open	simage_libsndfile.c	/^libsndfile_stream_open(const char * filename, s_stream * stream,$/;"	f	signature:(const char * filename, s_stream * stream, s_params * params)
libsndfile_stream_seek	simage_libsndfile.c	/^libsndfile_stream_seek(s_stream * stream, int offset, int whence, $/;"	f	signature:(s_stream * stream, int offset, int whence, s_params *params)
libsndfile_stream_tell	simage_libsndfile.c	/^libsndfile_stream_tell(s_stream * stream, s_params *params)$/;"	f	signature:(s_stream * stream, s_params *params)
list	params.c	/^  struct simage_param_data * list;$/;"	m	struct:simage_parameters_s	typeref:struct:simage_parameters_s::simage_param_data	file:	access:public
loader_data	simage.c	/^typedef struct _loader_data loader_data;$/;"	t	typeref:struct:_loader_data	file:
my_error_exit	simage_jpeg.c	/^my_error_exit (j_common_ptr cinfo)$/;"	f	file:	signature:(j_common_ptr cinfo)
my_error_mgr	simage_jpeg.c	/^struct my_error_mgr {$/;"	s	file:
my_error_mgr::pub	simage_jpeg.c	/^  struct jpeg_error_mgr pub;    \/* "public" fields *\/$/;"	m	struct:my_error_mgr	typeref:struct:my_error_mgr::jpeg_error_mgr	file:	access:public
my_error_mgr::setjmp_buffer	simage_jpeg.c	/^  jmp_buf setjmp_buffer;        \/* for return to caller *\/$/;"	m	struct:my_error_mgr	file:	access:public
my_error_ptr	simage_jpeg.c	/^typedef struct my_error_mgr * my_error_ptr;$/;"	t	typeref:struct:my_error_mgr	file:
n	resize.c	/^  int	n;		\/* number of contributors *\/$/;"	m	struct:__anon7	file:	access:public
name	params.c	/^  char * name;$/;"	m	struct:simage_param_data	file:	access:public
nc	simage_rgb.c	/^  int nc;$/;"	m	struct:__anon11	file:	access:public
new_image	resize.c	/^new_image(int xsize, int ysize, int bpp, unsigned char * data)$/;"	f	file:	signature:(int xsize, int ysize, int bpp, unsigned char * data)
next	movie.c	/^  struct simage_movie_exporter * next;$/;"	m	struct:simage_movie_exporter	typeref:struct:simage_movie_exporter::simage_movie_exporter	file:	access:public
next	movie.c	/^  struct simage_movie_importer * next;$/;"	m	struct:simage_movie_importer	typeref:struct:simage_movie_importer::simage_movie_importer	file:	access:public
next	params.c	/^  struct simage_param_data * next;$/;"	m	struct:simage_param_data	typeref:struct:simage_param_data::simage_param_data	file:	access:public
next	simage.c	/^  struct _loader_data *next;$/;"	m	struct:_loader_data	typeref:struct:_loader_data::_loader_data	file:	access:public
next	simage_write.c	/^  struct _saver_data * next;$/;"	m	struct:_saver_data	typeref:struct:_saver_data::_saver_data	file:	access:public
next	stream.c	/^  struct simage_stream_exporter * next;$/;"	m	struct:simage_stream_exporter	typeref:struct:simage_stream_exporter::simage_stream_exporter	file:	access:public
next	stream.c	/^  struct simage_stream_importer * next;$/;"	m	struct:simage_stream_importer	typeref:struct:simage_stream_importer::simage_stream_importer	file:	access:public
numcomp	simage_jasper.c	/^  int numcomp;$/;"	m	struct:__anon16	file:	access:public
numcomponents	simage_quicktime.c	/^  size_t numcomponents;$/;"	m	struct:__anon8	file:	access:public
oggvorbis_reader_cleanup_context	simage_oggvorbis_reader.c	/^oggvorbis_reader_cleanup_context(oggvorbis_reader_context *context)$/;"	f	file:	signature:(oggvorbis_reader_context *context)
oggvorbis_reader_close	simage_oggvorbis_reader.c	/^oggvorbis_reader_close(oggvorbis_reader_context *context)$/;"	f	file:	signature:(oggvorbis_reader_context *context)
oggvorbis_reader_close_cb	simage_oggvorbis_reader.c	/^oggvorbis_reader_close_cb(void *datasource)$/;"	f	file:	signature:(void *datasource)
oggvorbis_reader_context	simage_oggvorbis_reader.c	/^} oggvorbis_reader_context;$/;"	t	typeref:struct:__anon10	file:
oggvorbis_reader_get_stream_info	simage_oggvorbis_reader.c	/^oggvorbis_reader_get_stream_info(oggvorbis_reader_context *context, $/;"	f	file:	signature:(oggvorbis_reader_context *context, int *channels, int *samplerate)
oggvorbis_reader_init_context	simage_oggvorbis_reader.c	/^oggvorbis_reader_init_context(oggvorbis_reader_context *context)$/;"	f	file:	signature:(oggvorbis_reader_context *context)
oggvorbis_reader_open	simage_oggvorbis_reader.c	/^oggvorbis_reader_open(oggvorbis_reader_context **contextp, $/;"	f	file:	signature:(oggvorbis_reader_context **contextp, const char *filename)
oggvorbis_reader_read	simage_oggvorbis_reader.c	/^oggvorbis_reader_read(oggvorbis_reader_context *context, $/;"	f	file:	signature:(oggvorbis_reader_context *context, char *buffer, int size)
oggvorbis_reader_read_cb	simage_oggvorbis_reader.c	/^oggvorbis_reader_read_cb(void *ptr, size_t size, size_t nmemb, $/;"	f	file:	signature:(void *ptr, size_t size, size_t nmemb, void *datasource)
oggvorbis_reader_seek_cb	simage_oggvorbis_reader.c	/^oggvorbis_reader_seek_cb(void *datasource, ogg_int64_t offset, int whence)$/;"	f	file:	signature:(void *datasource, ogg_int64_t offset, int whence)
oggvorbis_reader_stream_close	simage_oggvorbis_reader.c	/^oggvorbis_reader_stream_close(s_stream * stream)$/;"	f	signature:(s_stream * stream)
oggvorbis_reader_stream_get	simage_oggvorbis_reader.c	/^oggvorbis_reader_stream_get(s_stream * stream, void * buffer, int * size, s_params * params)$/;"	f	signature:(s_stream * stream, void * buffer, int * size, s_params * params)
oggvorbis_reader_stream_open	simage_oggvorbis_reader.c	/^oggvorbis_reader_stream_open(const char * filename, s_stream * stream,$/;"	f	signature:(const char * filename, s_stream * stream, s_params * params)
oggvorbis_reader_stream_seek	simage_oggvorbis_reader.c	/^oggvorbis_reader_stream_seek(s_stream * stream, int offset, int whence,$/;"	f	signature:(s_stream * stream, int offset, int whence, s_params * params)
oggvorbis_reader_stream_tell	simage_oggvorbis_reader.c	/^oggvorbis_reader_stream_tell(s_stream * stream, s_params * params)$/;"	f	signature:(s_stream * stream, s_params * params)
oggvorbis_reader_tell_cb	simage_oggvorbis_reader.c	/^oggvorbis_reader_tell_cb(void *datasource)$/;"	f	file:	signature:(void *datasource)
open	movie.c	/^  s_movie_open_func * open;$/;"	m	struct:simage_movie_importer	file:	access:public
open	movie.c	/^  s_movie_open_func * open;$/;"	m	struct:simage_movie_s	file:	access:public
open	stream.c	/^  s_stream_open_func * open;$/;"	m	struct:simage_stream_importer	file:	access:public
open	stream.c	/^  s_stream_open_func * open;$/;"	m	struct:simage_stream_s	file:	access:public
open_exporter	simage_quicktime.c	/^open_exporter(const char * fext, GraphicsExportComponent * ge)$/;"	f	file:	signature:(const char * fext, GraphicsExportComponent * ge)
openfuncs	simage.c	/^  struct simage_open_funcs openfuncs;$/;"	m	struct:_loader_data	typeref:struct:_loader_data::simage_open_funcs	file:	access:public
outfile	simage_jpeg_writer.icc	/^  FILE * outfile;		\/* target stream *\/$/;"	m	struct:__anon15	file:	access:public
output_ascii85	simage_eps.c	/^output_ascii85(FILE * fp,$/;"	f	file:	signature:(FILE * fp, const unsigned char val, unsigned char * tuple, unsigned char * linebuf, int * tuplecnt, int * linecnt, int rowlen, int flush)
output_dest_mgr	simage_jpeg_writer.icc	/^} output_dest_mgr;$/;"	t	typeref:struct:__anon15	file:
p	Makefile.in	/^	    p="`echo $$p | sed -e 's|^.*\/||'`"; \\$/;"	v
p	resize.c	/^  CONTRIB * p;		\/* pointer to list of contributions *\/$/;"	m	struct:__anon7	file:	access:public
pack	simage_tiff.c	187;"	d	file:
pack	simage_tiff.c	665;"	d	file:
params	movie.c	/^  s_params * params;$/;"	m	struct:simage_movie_s	file:	access:public
params	stream.c	/^  s_params * params;$/;"	m	struct:simage_stream_s	file:	access:public
pdb	Makefile.am	/^	for ext in dll pdb; do \\$/;"	v
pfile	avi_encode.c	/^  PAVIFILE pfile; $/;"	m	struct:__anon9	file:	access:public
photometric	simage_tiff.c	/^  uint16 photometric;$/;"	m	struct:__anon12	file:	access:public
pic_loader	simage.c	/^static loader_data pic_loader;$/;"	v	file:
picerror	simage_pic.c	/^static int picerror = ERROR_NO_ERROR;$/;"	v	file:
pixel	resize.c	/^  int pixel;$/;"	m	struct:__anon6	file:	access:public
png_loader	simage.c	/^static loader_data png_loader;$/;"	v	file:
png_saver	simage_write.c	/^static saver_data png_saver;$/;"	v	file:
pngerror	simage_png.c	/^static int pngerror = ERR_NO_ERROR;$/;"	v	file:
pngext	simage_write.c	/^static char pngext[] = "png";$/;"	v	file:
pngfull	simage_write.c	/^static const char pngfull[] = "The PNG file format";$/;"	v	file:
pointerdata	params.c	/^    void * pointerdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
ps	avi_encode.c	/^  PAVISTREAM ps;$/;"	m	struct:__anon9	file:	access:public
pscomp	avi_encode.c	/^  PAVISTREAM pscomp;$/;"	m	struct:__anon9	file:	access:public
pub	simage_jpeg.c	/^  struct jpeg_error_mgr pub;    \/* "public" fields *\/$/;"	m	struct:my_error_mgr	typeref:struct:my_error_mgr::jpeg_error_mgr	file:	access:public
pub	simage_jpeg_reader.icc	/^  struct jpeg_source_mgr pub;$/;"	m	struct:__anon13	typeref:struct:__anon13::jpeg_source_mgr	file:	access:public
pub	simage_jpeg_writer.icc	/^  struct jpeg_destination_mgr pub; \/* public fields *\/$/;"	m	struct:__anon15	typeref:struct:__anon15::jpeg_destination_mgr	file:	access:public
put	movie.c	/^  s_movie_put_func * put;$/;"	m	struct:simage_movie_exporter	file:	access:public
put	movie.c	/^  s_movie_put_func * put;$/;"	m	struct:simage_movie_s	file:	access:public
put	stream.c	/^  s_stream_put_func * put;$/;"	m	struct:simage_stream_exporter	file:	access:public
put	stream.c	/^  s_stream_put_func * put;$/;"	m	struct:simage_stream_s	file:	access:public
put_pixel	resize.c	/^put_pixel(Image * image, int x, int y, float * data)$/;"	f	file:	signature:(Image * image, int x, int y, float * data)
qimage_loader	simage.c	/^static loader_data qimage_loader;$/;"	v	file:
qimage_set_save_format	simage_qimage.cpp	/^qimage_set_save_format(const char * ext, char * buf)$/;"	f	file:	signature:(const char * ext, char * buf)
qimageerror	simage_qimage.cpp	/^static int qimageerror = ERR_NO_ERROR;$/;"	v	file:
quicktime_loader	simage.c	/^static loader_data quicktime_loader;$/;"	v	file:
quicktimeerror	simage_quicktime.c	/^static int quicktimeerror = ERR_NO_ERROR;$/;"	v	file:
read_int	simage_rgb.c	/^read_int(FILE * in, int * dst, int n, int swap)$/;"	f	file:	signature:(FILE * in, int * dst, int n, int swap)
read_rgb_row_component	simage_rgb.c	/^read_rgb_row_component(simage_rgb_opendata * od, int y, int c)$/;"	f	file:	signature:(simage_rgb_opendata * od, int y, int c)
read_short	simage_rgb.c	/^read_short(FILE * in, short * dst, int n, int swap)$/;"	f	file:	signature:(FILE * in, short * dst, int n, int swap)
read_uint	simage_rgb.c	/^read_uint(FILE * in, unsigned int * dst, int n, int swap)$/;"	f	file:	signature:(FILE * in, unsigned int * dst, int n, int swap)
read_ushort	simage_rgb.c	/^read_ushort(FILE * in, unsigned short * dst, int n, int swap)$/;"	f	file:	signature:(FILE * in, unsigned short * dst, int n, int swap)
readint16	simage_pic.c	/^readint16(FILE *fp, int * res)$/;"	f	file:	signature:(FILE *fp, int * res)
red	simage_tiff.c	/^  uint16 * red;$/;"	m	struct:__anon12	file:	access:public
remap_row	simage_tiff.c	/^remap_row(unsigned char *ptr, unsigned char *data, int n,$/;"	f	file:	signature:(unsigned char *ptr, unsigned char *data, int n, unsigned short *rmap, unsigned short *gmap, unsigned short *bmap,unsigned char *amap)
rgb_loader	simage.c	/^static loader_data rgb_loader;$/;"	v	file:
rgb_saver	simage_write.c	/^static saver_data rgb_saver;$/;"	v	file:
rgba_to_argb	simage_quicktime.c	/^rgba_to_argb(uint32_t * px, int width, int height) $/;"	f	file:	signature:(uint32_t * px, int width, int height)
rgberror	simage_rgb.c	/^static int rgberror = ERR_NO_ERROR;$/;"	v	file:
rgbext	simage_write.c	/^static char rgbext[] = "rgb,rgba,bw,inta,int";$/;"	v	file:
rgbfull	simage_write.c	/^static const char rgbfull[] ="The SGI RGB file format";$/;"	v	file:
rle_decode	simage_tga.c	/^rle_decode(unsigned char * src, $/;"	f	file:	signature:(unsigned char * src, unsigned char *dest, const int numbytes, int * rleRemaining, int * rleIsCompressed, unsigned char *rleCurrent, const int rleEntrySize)
rle_new_packet	simage_tga.c	/^rle_new_packet(unsigned char * src,$/;"	f	file:	signature:(unsigned char * src, int * rleRemaining, int * rleIsCompressed, unsigned char *rleCurrent, const int rleEntrySize)
rlebuf	simage_rgb.c	/^  unsigned char * rlebuf;$/;"	m	struct:__anon11	file:	access:public
rlebuflen	simage_rgb.c	/^  int rlebuflen;$/;"	m	struct:__anon11	file:	access:public
rowlen	simage_rgb.c	/^  int * rowlen;$/;"	m	struct:__anon11	file:	access:public
rowseek	simage_rgb.c	/^  unsigned int * rowseek;$/;"	m	struct:__anon11	file:	access:public
rowsize	simage_tiff.c	/^  int rowsize;$/;"	m	struct:__anon12	file:	access:public
s_generic_func	params.c	/^typedef void s_generic_func();$/;"	t	file:
s_image_components	simage12.c	/^s_image_components(s_image * image)$/;"	f	signature:(s_image * image)
s_image_create	simage12.c	/^s_image_create(int w, int h, int components,$/;"	f	signature:(int w, int h, int components, unsigned char * prealloc )
s_image_data	simage12.c	/^s_image_data(s_image * image)$/;"	f	signature:(s_image * image)
s_image_destroy	simage12.c	/^s_image_destroy(s_image * image)$/;"	f	signature:(s_image * image)
s_image_get_component_order	simage12.c	/^s_image_get_component_order(s_image * image)$/;"	f	signature:(s_image * image)
s_image_height	simage12.c	/^s_image_height(s_image * image)$/;"	f	signature:(s_image * image)
s_image_load	simage12.c	/^s_image_load(const char * filename, s_image * prealloc \/* | NULL *\/)$/;"	f	signature:(const char * filename, s_image * prealloc )
s_image_open	simage.c	/^s_image_open(const char * filename, int oktoreadall)$/;"	f	signature:(const char * filename, int oktoreadall)
s_image_read_line	simage.c	/^s_image_read_line(s_image * image, $/;"	f	signature:(s_image * image, int line, unsigned char * buf)
s_image_save	simage12.c	/^s_image_save(const char * filename, s_image * image,$/;"	f	signature:(const char * filename, s_image * image, s_params * params )
s_image_set	simage12.c	/^s_image_set(s_image * image, int w, int h, int components,$/;"	f	signature:(s_image * image, int w, int h, int components, unsigned char * data, int copydata)
s_image_set_component_order	simage12.c	/^s_image_set_component_order(s_image * image, int order)$/;"	f	signature:(s_image * image, int order)
s_image_width	simage12.c	/^s_image_width(s_image * image)$/;"	f	signature:(s_image * image)
s_movie_close	movie.c	/^s_movie_close(s_movie * movie)$/;"	f	signature:(s_movie * movie)
s_movie_create	movie.c	/^s_movie_create(const char * filename, s_params * params \/* | NULL *\/)$/;"	f	signature:(const char * filename, s_params * params )
s_movie_destroy	movie.c	/^s_movie_destroy(s_movie * movie)$/;"	f	signature:(s_movie * movie)
s_movie_exporter_add	movie.c	/^s_movie_exporter_add(s_movie_create_func * create,$/;"	f	signature:(s_movie_create_func * create, s_movie_put_func * put, s_movie_close_func * close)
s_movie_get_image	movie.c	/^s_movie_get_image(s_movie * movie, s_image * prealloc, s_params * params)$/;"	f	signature:(s_movie * movie, s_image * prealloc, s_params * params)
s_movie_importer_add	movie.c	/^s_movie_importer_add(s_movie_open_func * open,$/;"	f	signature:(s_movie_open_func * open, s_movie_get_func * get, s_movie_close_func * close)
s_movie_open	movie.c	/^s_movie_open(const char * filename)$/;"	f	signature:(const char * filename)
s_movie_params	movie.c	/^s_movie_params(s_movie * movie)$/;"	f	signature:(s_movie * movie)
s_movie_put_image	movie.c	/^s_movie_put_image(s_movie * movie, s_image * image,$/;"	f	signature:(s_movie * movie, s_image * image, s_params * params)
s_params_copy	params.c	/^s_params_copy(s_params * params)$/;"	f	signature:(s_params * params)
s_params_create	params.c	/^s_params_create(void)$/;"	f	signature:(void)
s_params_destroy	params.c	/^s_params_destroy(s_params * params)$/;"	f	signature:(s_params * params)
s_params_get	params.c	/^s_params_get(s_params * params, ...)$/;"	f	signature:(s_params * params, ...)
s_params_set	params.c	/^s_params_set(s_params * params, ...)$/;"	f	signature:(s_params * params, ...)
s_set_dynamic_loader_interface	simage.c	/^s_set_dynamic_loader_interface(s_dlopen_func *dlopen,$/;"	f	signature:(s_dlopen_func *dlopen, s_dlsym_func *dlsym, s_dlclose_func *dlclose)
s_stream_close	stream.c	/^s_stream_close(s_stream * stream)$/;"	f	signature:(s_stream * stream)
s_stream_context_get	stream.c	/^s_stream_context_get(s_stream *stream)$/;"	f	signature:(s_stream *stream)
s_stream_context_set	stream.c	/^s_stream_context_set(s_stream *stream, void *context)$/;"	f	signature:(s_stream *stream, void *context)
s_stream_create	stream.c	/^s_stream_create(const char * filename, s_params * params \/* | NULL *\/)$/;"	f	signature:(const char * filename, s_params * params )
s_stream_destroy	stream.c	/^s_stream_destroy(s_stream * stream)$/;"	f	signature:(s_stream * stream)
s_stream_exporter_add	stream.c	/^s_stream_exporter_add(s_stream_create_func * create,$/;"	f	signature:(s_stream_create_func * create, s_stream_put_func * put, s_stream_close_func * close)
s_stream_exporter_add_ex	stream.c	/^s_stream_exporter_add_ex(s_stream_create_func * create,$/;"	f	signature:(s_stream_create_func * create, s_stream_put_func * put, s_stream_seek_func * seek, s_stream_tell_func * tell, s_stream_close_func * close)
s_stream_get_buffer	stream.c	/^s_stream_get_buffer(s_stream * stream, void * buffer,$/;"	f	signature:(s_stream * stream, void * buffer, int *size, s_params * params)
s_stream_importer_add	stream.c	/^s_stream_importer_add(s_stream_open_func * open,$/;"	f	signature:(s_stream_open_func * open, s_stream_get_func * get, s_stream_close_func * close)
s_stream_importer_add_ex	stream.c	/^s_stream_importer_add_ex(s_stream_open_func * open,$/;"	f	signature:(s_stream_open_func * open, s_stream_get_func * get, s_stream_seek_func * seek, s_stream_tell_func * tell, s_stream_close_func * close)
s_stream_open	stream.c	/^s_stream_open(const char * filename, s_params * params)$/;"	f	signature:(const char * filename, s_params * params)
s_stream_params	stream.c	/^s_stream_params(s_stream * stream)$/;"	f	signature:(s_stream * stream)
s_stream_put_buffer	stream.c	/^s_stream_put_buffer(s_stream * stream, void * buffer, $/;"	f	signature:(s_stream * stream, void * buffer, int size, s_params * params)
s_stream_seek	stream.c	/^s_stream_seek(s_stream * stream, int offset, int whence,$/;"	f	signature:(s_stream * stream, int offset, int whence, s_params * params )
s_stream_tell	stream.c	/^int s_stream_tell(s_stream *stream,$/;"	f	signature:(s_stream *stream, s_params * params )
safe_strdup	simage_write.c	/^safe_strdup(const char * str)$/;"	f	file:	signature:(const char * str)
safe_strfree	simage_write.c	/^safe_strfree(char * str)$/;"	f	file:	signature:(char * str)
samplesperpixel	simage_tiff.c	/^  uint16 samplesperpixel;$/;"	m	struct:__anon12	file:	access:public
save_func	simage_write.c	/^  int (*save_func)(const char * name, const unsigned char * bytes,$/;"	m	struct:_saver_data	file:	access:public
save_func_ext	simage_write.c	/^  int (*save_func_ext)(const char * name, const unsigned char * bytes,$/;"	m	struct:_saver_data	file:	access:public
saver_data	simage_write.c	/^typedef struct _saver_data saver_data;$/;"	t	typeref:struct:_saver_data	file:
seek	stream.c	/^  s_stream_seek_func * seek;$/;"	m	struct:simage_stream_exporter	file:	access:public
seek	stream.c	/^  s_stream_seek_func * seek;$/;"	m	struct:simage_stream_importer	file:	access:public
seek	stream.c	/^  s_stream_seek_func * seek;$/;"	m	struct:simage_stream_s	file:	access:public
setjmp_buffer	simage_jpeg.c	/^  jmp_buf setjmp_buffer;        \/* for return to caller *\/$/;"	m	struct:my_error_mgr	file:	access:public
setjmp_buffer	simage_png.c	/^static jmp_buf setjmp_buffer;$/;"	v	file:
sfinfo	simage_libsndfile.c	/^  SF_INFO sfinfo;$/;"	m	struct:__anon1	file:	access:public
simage_add_loader	simage.c	/^simage_add_loader(const struct simage_plugin * plugin, int addbefore)$/;"	f	signature:(const struct simage_plugin * plugin, int addbefore)
simage_add_saver	simage_write.c	/^simage_add_saver(int (*save_func)(const char * name,$/;"	f	signature:(int (*save_func)(const char * name, const unsigned char * bytes, int width, int height, int nc), int (*error_func)(char * textbuffer, int bufferlen), const char * extensions, const char * fullname, const char * description, int addbefore)
simage_cgimage_error	simage_cgimage.c	/^simage_cgimage_error(char * cstr, int buflen)$/;"	f	signature:(char * cstr, int buflen)
simage_cgimage_get_savers	simage_cgimage.c	/^simage_cgimage_get_savers(void)$/;"	f	signature:(void)
simage_cgimage_identify	simage_cgimage.c	/^simage_cgimage_identify(const char * file, const unsigned char * header,$/;"	f	signature:(const char * file, const unsigned char * header, int headerlen)
simage_cgimage_load	simage_cgimage.c	/^simage_cgimage_load(const char * file, int * width, int * height, int * numcomponents)$/;"	f	signature:(const char * file, int * width, int * height, int * numcomponents)
simage_cgimage_save	simage_cgimage.c	/^simage_cgimage_save(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char * bytes, int width, int height, int numcomponents, const char * ext)
simage_check_save_supported	simage_write.c	/^simage_check_save_supported(const char * filenameextension)$/;"	f	signature:(const char * filenameextension)
simage_check_supported	simage.c	/^simage_check_supported(const char *filename)$/;"	f	signature:(const char *filename)
simage_clear_error	simage.c	/^simage_clear_error(void);$/;"	p	file:	signature:(void)
simage_eps_error	simage_eps.c	/^simage_eps_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_eps_save	simage_eps.c	/^simage_eps_save(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char * src, int width, int height, int nc)
simage_error_msg	simage.c	/^char simage_error_msg[SIMAGE_ERROR_BUFSIZE+1];$/;"	v
simage_free_image	simage.c	/^simage_free_image(unsigned char * imagedata)$/;"	f	signature:(unsigned char * imagedata)
simage_gdiplus_close	simage_gdiplus.cpp	/^simage_gdiplus_close(void * opendata)$/;"	f	signature:(void * opendata)
simage_gdiplus_error	simage_gdiplus.cpp	/^simage_gdiplus_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_gdiplus_get_savers	simage_gdiplus.cpp	/^simage_gdiplus_get_savers(void)$/;"	f	signature:(void)
simage_gdiplus_identify	simage_gdiplus.cpp	/^simage_gdiplus_identify(const char * ptr,$/;"	f	signature:(const char * ptr, const unsigned char * header, int headerlen)
simage_gdiplus_load	simage_gdiplus.cpp	/^simage_gdiplus_load(const char * filename,$/;"	f	signature:(const char * filename, int * width, int * height, int * numcomponents)
simage_gdiplus_open	simage_gdiplus.cpp	/^simage_gdiplus_open(const char * filename,$/;"	f	signature:(const char * filename, int * width, int * height, int * numcomponents)
simage_gdiplus_read_line	simage_gdiplus.cpp	/^simage_gdiplus_read_line(void * opendata, int y, unsigned char * buf)$/;"	f	signature:(void * opendata, int y, unsigned char * buf)
simage_gdiplus_read_region	simage_gdiplus.cpp	/^simage_gdiplus_read_region(void * opendata,$/;"	f	signature:(void * opendata, int x, int y, int w, int h, unsigned char * buf)
simage_gdiplus_save	simage_gdiplus.cpp	/^simage_gdiplus_save(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * bytes, int width, int height, int numcomponents, const char * filetypeext)
simage_get_last_error	simage.c	/^simage_get_last_error(void)$/;"	f	signature:(void)
simage_get_num_savers	simage_write.c	/^simage_get_num_savers(void)$/;"	f	signature:(void)
simage_get_saver_description	simage_write.c	/^simage_get_saver_description(void * handle)$/;"	f	signature:(void * handle)
simage_get_saver_extensions	simage_write.c	/^simage_get_saver_extensions(void * handle)$/;"	f	signature:(void * handle)
simage_get_saver_fullname	simage_write.c	/^simage_get_saver_fullname(void * handle)$/;"	f	signature:(void * handle)
simage_get_saver_handle	simage_write.c	/^simage_get_saver_handle(int idx)$/;"	f	signature:(int idx)
simage_gif_error	simage_gif.c	/^simage_gif_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_gif_identify	simage_gif.c	/^simage_gif_identify(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char *header, int headerlen)
simage_gif_load	simage_gif.c	/^simage_gif_load(const char *filename,$/;"	f	signature:(const char *filename, int *width_ret, int *height_ret, int *numComponents_ret)
simage_gif_save	simage_gif.c	/^simage_gif_save(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * bytes, int width, int height, int numcomponents)
simage_jasper_close	simage_jasper.c	/^simage_jasper_close(void * opendata)$/;"	f	signature:(void * opendata)
simage_jasper_error	simage_jasper.c	/^simage_jasper_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_jasper_identify	simage_jasper.c	/^simage_jasper_identify(const char *ptr,$/;"	f	signature:(const char *ptr, const unsigned char * header, int headerlen)
simage_jasper_load	simage_jasper.c	/^simage_jasper_load(const char * filename,$/;"	f	signature:(const char * filename, int * width_ret, int * height_ret, int * numComponents_ret)
simage_jasper_open	simage_jasper.c	/^simage_jasper_open(const char * filename,$/;"	f	signature:(const char * filename, int * width, int * height, int * numcomponents)
simage_jasper_opendata	simage_jasper.c	/^} simage_jasper_opendata;$/;"	t	typeref:struct:__anon16	file:
simage_jasper_read_line	simage_jasper.c	/^simage_jasper_read_line(void * opendata, int y, unsigned char * buf)$/;"	f	signature:(void * opendata, int y, unsigned char * buf)
simage_jasper_save	simage_jasper.c	/^simage_jasper_save(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char * bytes, int width, int height, int numcomponents)
simage_jpeg_dest_init	simage_jpeg_writer.icc	/^simage_jpeg_dest_init(j_compress_ptr cinfo, FILE * outfile)$/;"	f	file:	signature:(j_compress_ptr cinfo, FILE * outfile)
simage_jpeg_error	simage_jpeg.c	/^simage_jpeg_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_jpeg_identify	simage_jpeg.c	/^simage_jpeg_identify(const char * ptr,$/;"	f	signature:(const char * ptr, const unsigned char *header, int headerlen)
simage_jpeg_load	simage_jpeg.c	/^simage_jpeg_load(const char *filename,$/;"	f	signature:(const char *filename, int *width_ret, int *height_ret, int *numComponents_ret)
simage_jpeg_save	simage_jpeg.c	/^simage_jpeg_save(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * bytes, int width, int height, int numcomponents)
simage_jpeg_src_init	simage_jpeg_reader.icc	/^simage_jpeg_src_init(j_decompress_ptr cinfo, FILE * infile)$/;"	f	file:	signature:(j_decompress_ptr cinfo, FILE * infile)
simage_movie_exporter	movie.c	/^struct simage_movie_exporter {$/;"	s	file:
simage_movie_exporter::close	movie.c	/^  s_movie_close_func * close;  $/;"	m	struct:simage_movie_exporter	file:	access:public
simage_movie_exporter::create	movie.c	/^  s_movie_create_func * create;$/;"	m	struct:simage_movie_exporter	file:	access:public
simage_movie_exporter::next	movie.c	/^  struct simage_movie_exporter * next;$/;"	m	struct:simage_movie_exporter	typeref:struct:simage_movie_exporter::simage_movie_exporter	file:	access:public
simage_movie_exporter::put	movie.c	/^  s_movie_put_func * put;$/;"	m	struct:simage_movie_exporter	file:	access:public
simage_movie_importer	movie.c	/^struct simage_movie_importer {$/;"	s	file:
simage_movie_importer::close	movie.c	/^  s_movie_close_func * close;  $/;"	m	struct:simage_movie_importer	file:	access:public
simage_movie_importer::get	movie.c	/^  s_movie_get_func * get;$/;"	m	struct:simage_movie_importer	file:	access:public
simage_movie_importer::next	movie.c	/^  struct simage_movie_importer * next;$/;"	m	struct:simage_movie_importer	typeref:struct:simage_movie_importer::simage_movie_importer	file:	access:public
simage_movie_importer::open	movie.c	/^  s_movie_open_func * open;$/;"	m	struct:simage_movie_importer	file:	access:public
simage_movie_s	movie.c	/^struct simage_movie_s {$/;"	s	file:
simage_movie_s::close	movie.c	/^  s_movie_close_func * close;$/;"	m	struct:simage_movie_s	file:	access:public
simage_movie_s::create	movie.c	/^  s_movie_create_func * create;$/;"	m	struct:simage_movie_s	file:	access:public
simage_movie_s::filename	movie.c	/^  char * filename;$/;"	m	struct:simage_movie_s	file:	access:public
simage_movie_s::get	movie.c	/^  s_movie_get_func * get;$/;"	m	struct:simage_movie_s	file:	access:public
simage_movie_s::open	movie.c	/^  s_movie_open_func * open;$/;"	m	struct:simage_movie_s	file:	access:public
simage_movie_s::params	movie.c	/^  s_params * params;$/;"	m	struct:simage_movie_s	file:	access:public
simage_movie_s::put	movie.c	/^  s_movie_put_func * put;$/;"	m	struct:simage_movie_s	file:	access:public
simage_next_power_of_two	simage.c	/^simage_next_power_of_two(int val)$/;"	f	signature:(int val)
simage_param_data	params.c	/^struct simage_param_data {$/;"	s	file:
simage_param_data::__anon4::doubledata	params.c	/^    double doubledata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
simage_param_data::__anon4::floatdata	params.c	/^    float floatdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
simage_param_data::__anon4::functiondata	params.c	/^    void (*functiondata)();$/;"	m	union:simage_param_data::__anon4	file:	access:public
simage_param_data::__anon4::integerdata	params.c	/^    int integerdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
simage_param_data::__anon4::pointerdata	params.c	/^    void * pointerdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
simage_param_data::__anon4::stringdata	params.c	/^    char * stringdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
simage_param_data::data	params.c	/^  } data;$/;"	m	struct:simage_param_data	typeref:union:simage_param_data::__anon4	file:	access:public
simage_param_data::name	params.c	/^  char * name;$/;"	m	struct:simage_param_data	file:	access:public
simage_param_data::next	params.c	/^  struct simage_param_data * next;$/;"	m	struct:simage_param_data	typeref:struct:simage_param_data::simage_param_data	file:	access:public
simage_param_data::type	params.c	/^  int type;$/;"	m	struct:simage_param_data	file:	access:public
simage_parameters_s	params.c	/^struct simage_parameters_s {$/;"	s	file:
simage_parameters_s::list	params.c	/^  struct simage_param_data * list;$/;"	m	struct:simage_parameters_s	typeref:struct:simage_parameters_s::simage_param_data	file:	access:public
simage_pic_error	simage_pic.c	/^simage_pic_error(char *buffer, int bufferlen)$/;"	f	signature:(char *buffer, int bufferlen)
simage_pic_identify	simage_pic.c	/^simage_pic_identify(const char * ptr,$/;"	f	signature:(const char * ptr, const unsigned char *header, int headerlen)
simage_pic_load	simage_pic.c	/^simage_pic_load(const char *filename,$/;"	f	signature:(const char *filename, int *width_ret, int *height_ret, int *numComponents_ret)
simage_png_error	simage_png.c	/^simage_png_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_png_identify	simage_png.c	/^simage_png_identify(const char * ptr,$/;"	f	signature:(const char * ptr, const unsigned char *header, int headerlen)
simage_png_load	simage_png.c	/^simage_png_load(const char *filename,$/;"	f	signature:(const char *filename, int *width_ret, int *height_ret, int *numComponents_ret)
simage_png_save	simage_png.c	/^simage_png_save(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char * bytes, int width, int height, int numcomponents)
simage_qimage_error	simage_qimage.cpp	/^simage_qimage_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_qimage_get_savers	simage_qimage.cpp	/^simage_qimage_get_savers(void)$/;"	f	signature:(void)
simage_qimage_identify	simage_qimage.cpp	/^simage_qimage_identify(const char * ptr,$/;"	f	signature:(const char * ptr, const unsigned char *header, int headerlen)
simage_qimage_load	simage_qimage.cpp	/^simage_qimage_load(const char * filename,$/;"	f	signature:(const char * filename, int * width_ret, int * height_ret, int * numComponents_ret)
simage_qimage_save	simage_qimage.cpp	/^simage_qimage_save(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * bytes, int width, int height, int numcomponents, const char * filetypeext)
simage_quicktime_error	simage_quicktime.c	/^simage_quicktime_error(char * cstr, int buflen)$/;"	f	signature:(char * cstr, int buflen)
simage_quicktime_get_savers	simage_quicktime.c	/^simage_quicktime_get_savers(void)$/;"	f	signature:(void)
simage_quicktime_identify	simage_quicktime.c	/^simage_quicktime_identify(const char * file, const unsigned char * header,$/;"	f	signature:(const char * file, const unsigned char * header, int headerlen)
simage_quicktime_load	simage_quicktime.c	/^simage_quicktime_load(const char * file, int * width,$/;"	f	signature:(const char * file, int * width, int * height, int * numcomponents)
simage_quicktime_save	simage_quicktime.c	/^simage_quicktime_save(const char * filename, const unsigned char * px,$/;"	f	signature:(const char * filename, const unsigned char * px, int width, int height, int numcomponents, const char * filetypeext)
simage_read_image	simage.c	/^simage_read_image(const char *filename,$/;"	f	signature:(const char *filename, int *width, int *height, int *numComponents)
simage_remove_loader	simage.c	/^simage_remove_loader(void * handle)$/;"	f	signature:(void * handle)
simage_remove_saver	simage_write.c	/^simage_remove_saver(void * handle)$/;"	f	signature:(void * handle)
simage_resize	resize.c	/^simage_resize(unsigned char * src, int width,$/;"	f	signature:(unsigned char * src, int width, int height, int num_comp, int newwidth, int newheight)
simage_resize3d	simage13.c	/^unsigned char * simage_resize3d(unsigned char *src,$/;"	f	signature:(unsigned char *src, int width, int height, int nc, int layers, int newwidth, int newheight, int newlayers)
simage_resize_fast	resize.c	/^simage_resize_fast(unsigned char *src, int width,$/;"	f	file:	signature:(unsigned char *src, int width, int height, int num_comp, int newwidth, int newheight)
simage_rgb_close	simage_rgb.c	/^simage_rgb_close(void * opendata)$/;"	f	signature:(void * opendata)
simage_rgb_error	simage_rgb.c	/^simage_rgb_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_rgb_identify	simage_rgb.c	/^simage_rgb_identify(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * header, int headerlen)
simage_rgb_load	simage_rgb.c	/^simage_rgb_load(const char * filename,$/;"	f	signature:(const char * filename, int * width, int * height, int * numcomponents)
simage_rgb_open	simage_rgb.c	/^simage_rgb_open(const char * filename,$/;"	f	signature:(const char * filename, int * width, int * height, int * numcomponents)
simage_rgb_opendata	simage_rgb.c	/^} simage_rgb_opendata;$/;"	t	typeref:struct:__anon11	file:
simage_rgb_read_line	simage_rgb.c	/^simage_rgb_read_line(void * opendata, int y, unsigned char * buf)$/;"	f	signature:(void * opendata, int y, unsigned char * buf)
simage_rgb_save	simage_rgb.c	/^simage_rgb_save(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * bytes, int width, int height, int comp)
simage_save_image	simage_write.c	/^simage_save_image(const char * filename,$/;"	f	signature:(const char * filename, const unsigned char * bytes, int width, int height, int numcomponents, const char * filenameextension)
simage_strcasecmp	simage_write.c	/^simage_strcasecmp(const char * str1, const char * str2)$/;"	f	file:	signature:(const char * str1, const char * str2)
simage_stream_exporter	stream.c	/^struct simage_stream_exporter {$/;"	s	file:
simage_stream_exporter::close	stream.c	/^  s_stream_close_func * close;  $/;"	m	struct:simage_stream_exporter	file:	access:public
simage_stream_exporter::create	stream.c	/^  s_stream_create_func * create;$/;"	m	struct:simage_stream_exporter	file:	access:public
simage_stream_exporter::next	stream.c	/^  struct simage_stream_exporter * next;$/;"	m	struct:simage_stream_exporter	typeref:struct:simage_stream_exporter::simage_stream_exporter	file:	access:public
simage_stream_exporter::put	stream.c	/^  s_stream_put_func * put;$/;"	m	struct:simage_stream_exporter	file:	access:public
simage_stream_exporter::seek	stream.c	/^  s_stream_seek_func * seek;$/;"	m	struct:simage_stream_exporter	file:	access:public
simage_stream_exporter::tell	stream.c	/^  s_stream_tell_func * tell;$/;"	m	struct:simage_stream_exporter	file:	access:public
simage_stream_importer	stream.c	/^struct simage_stream_importer {$/;"	s	file:
simage_stream_importer::close	stream.c	/^  s_stream_close_func * close;  $/;"	m	struct:simage_stream_importer	file:	access:public
simage_stream_importer::get	stream.c	/^  s_stream_get_func * get;$/;"	m	struct:simage_stream_importer	file:	access:public
simage_stream_importer::next	stream.c	/^  struct simage_stream_importer * next;$/;"	m	struct:simage_stream_importer	typeref:struct:simage_stream_importer::simage_stream_importer	file:	access:public
simage_stream_importer::open	stream.c	/^  s_stream_open_func * open;$/;"	m	struct:simage_stream_importer	file:	access:public
simage_stream_importer::seek	stream.c	/^  s_stream_seek_func * seek;$/;"	m	struct:simage_stream_importer	file:	access:public
simage_stream_importer::tell	stream.c	/^  s_stream_tell_func * tell;$/;"	m	struct:simage_stream_importer	file:	access:public
simage_stream_s	stream.c	/^struct simage_stream_s {$/;"	s	file:
simage_stream_s::close	stream.c	/^  s_stream_close_func * close;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::context	stream.c	/^  void *context;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::create	stream.c	/^  s_stream_create_func * create;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::filename	stream.c	/^  char * filename;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::get	stream.c	/^  s_stream_get_func * get;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::open	stream.c	/^  s_stream_open_func * open;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::params	stream.c	/^  s_params * params;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::put	stream.c	/^  s_stream_put_func * put;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::seek	stream.c	/^  s_stream_seek_func * seek;$/;"	m	struct:simage_stream_s	file:	access:public
simage_stream_s::tell	stream.c	/^  s_stream_tell_func * tell;$/;"	m	struct:simage_stream_s	file:	access:public
simage_tga_error	simage_tga.c	/^simage_tga_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_tga_identify	simage_tga.c	/^simage_tga_identify(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char *buf, int headerlen)
simage_tga_load	simage_tga.c	/^simage_tga_load(const char *filename,$/;"	f	signature:(const char *filename, int *width_ret, int *height_ret, int *numComponents_ret)
simage_tiff_close	simage_tiff.c	/^simage_tiff_close(void * opendata)$/;"	f	signature:(void * opendata)
simage_tiff_error	simage_tiff.c	/^simage_tiff_error(char * buffer, int buflen)$/;"	f	signature:(char * buffer, int buflen)
simage_tiff_identify	simage_tiff.c	/^simage_tiff_identify(const char *ptr,$/;"	f	signature:(const char *ptr, const unsigned char *header, int headerlen)
simage_tiff_load	simage_tiff.c	/^simage_tiff_load(const char *filename,$/;"	f	signature:(const char *filename, int *width_ret, int *height_ret, int *numComponents_ret)
simage_tiff_open	simage_tiff.c	/^simage_tiff_open(const char * filename,$/;"	f	signature:(const char * filename, int * width, int * height, int * numcomponents)
simage_tiff_opendata	simage_tiff.c	/^} simage_tiff_opendata;$/;"	t	typeref:struct:__anon12	file:
simage_tiff_read_line	simage_tiff.c	/^simage_tiff_read_line(void * opendata, int y, unsigned char * buf)$/;"	f	signature:(void * opendata, int y, unsigned char * buf)
simage_tiff_save	simage_tiff.c	/^simage_tiff_save(const char *filename,$/;"	f	signature:(const char *filename, const unsigned char * bytes, int width, int height, int numcomponents)
simage_version	simage.c	/^simage_version(int * major, int * minor, int * micro)$/;"	f	signature:(int * major, int * minor, int * micro)
simage_xwd_error	simage_xwd.c	/^simage_xwd_error($/;"	f	signature:( char * buffer, int bufferlen )
simage_xwd_identify	simage_xwd.c	/^simage_xwd_identify($/;"	f	signature:( const char * filename, const unsigned char * header, int headerlen )
simage_xwd_load	simage_xwd.c	/^simage_xwd_load($/;"	f	signature:( const char * filename, int * width, int * height, int * components )
simage_xwd_save	simage_xwd.c	/^simage_xwd_save($/;"	f	signature:( const char * filename, const unsigned char * bytes, int width, int height, int components )
sinc	resize.c	/^sinc(float x)$/;"	f	file:	signature:(float x)
size	simage_quicktime.c	/^  size_t size;$/;"	m	struct:__anon8	file:	access:public
skip_input_data	simage_jpeg_reader.icc	/^skip_input_data(j_decompress_ptr cinfo, long num_bytes)$/;"	f	file:	signature:(j_decompress_ptr cinfo, long num_bytes)
span	resize.c	/^  int span;             \/* byte offset between two scanlines *\/$/;"	m	struct:__anon5	file:	access:public
srcdir	Makefile.in	/^srcdir = @srcdir@$/;"	v
start_of_file	simage_jpeg_reader.icc	/^  boolean start_of_file;$/;"	m	struct:__anon13	file:	access:public
str_tolower	simage_write.c	/^str_tolower(char * str)$/;"	f	file:	signature:(char * str)
stringdata	params.c	/^    char * stringdata;$/;"	m	union:simage_param_data::__anon4	file:	access:public
swap32	simage_xwd.c	/^unsigned long swap32( unsigned long value ) {$/;"	f	signature:( unsigned long value )
system_is_bigendian	simage_quicktime.c	/^static bool system_is_bigendian(void)$/;"	f	file:	signature:(void)
targa_loader	simage.c	/^static loader_data targa_loader;$/;"	v	file:
tell	stream.c	/^  s_stream_tell_func * tell;$/;"	m	struct:simage_stream_exporter	file:	access:public
tell	stream.c	/^  s_stream_tell_func * tell;$/;"	m	struct:simage_stream_importer	file:	access:public
tell	stream.c	/^  s_stream_tell_func * tell;$/;"	m	struct:simage_stream_s	file:	access:public
tempbuffer	simage_libsndfile.c	/^  double *tempbuffer;$/;"	m	struct:__anon1	file:	access:public
tempbuffersize	simage_libsndfile.c	/^  int tempbuffersize;$/;"	m	struct:__anon1	file:	access:public
term_destination	simage_jpeg_writer.icc	/^term_destination(j_compress_ptr cinfo)$/;"	f	file:	signature:(j_compress_ptr cinfo)
term_source	simage_jpeg_reader.icc	/^term_source(j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
tgaerror	simage_tga.c	/^static int tgaerror = ERR_NO_ERROR;$/;"	v	file:
tiff_error	simage_tiff.c	/^tiff_error(const char* module, const char* fmt, va_list list)$/;"	f	file:	signature:(const char* module, const char* fmt, va_list list)
tiff_loader	simage.c	/^static loader_data tiff_loader;$/;"	v	file:
tiff_saver	simage_write.c	/^static saver_data tiff_saver;$/;"	v	file:
tiff_try_read_rgba	simage_tiff.c	/^tiff_try_read_rgba(TIFF *in, int w, int h, int format, $/;"	f	file:	signature:(TIFF *in, int w, int h, int format, unsigned char * buffer)
tiff_warn	simage_tiff.c	/^tiff_warn(const char * module, const char * fmt, va_list list)$/;"	f	file:	signature:(const char * module, const char * fmt, va_list list)
tifferror	simage_tiff.c	/^static int tifferror = ERR_NO_ERROR;$/;"	v	file:
tiffext	simage_write.c	/^static char tiffext[] = "tiff,tif";$/;"	v	file:
tifffull	simage_write.c	/^static const char tifffull[] = "The Tag Image File Format";$/;"	v	file:
tmpbuf	simage_rgb.c	/^  unsigned char * tmpbuf[4];$/;"	m	struct:__anon11	file:	access:public
triangle_filter	resize.c	/^triangle_filter(float t)$/;"	f	file:	signature:(float t)
triangle_support	resize.c	115;"	d	file:
type	params.c	/^  int type;$/;"	m	struct:simage_param_data	file:	access:public
user_flush_cb	simage_png.c	/^user_flush_cb(png_structp png_ptr)$/;"	f	file:	signature:(png_structp png_ptr)
user_read_cb	simage_png.c	/^user_read_cb(png_structp png_ptr, png_bytep data, png_uint_32 length)$/;"	f	file:	signature:(png_structp png_ptr, png_bytep data, png_uint_32 length)
user_write_cb	simage_png.c	/^user_write_cb(png_structp png_ptr, png_bytep data, png_uint_32 length)$/;"	f	file:	signature:(png_structp png_ptr, png_bytep data, png_uint_32 length)
v_flip	simage_quicktime.c	/^v_flip(const unsigned char * px, int width, int height,$/;"	f	file:	signature:(const unsigned char * px, int width, int height, int numcomponents, unsigned char * newpx)
vorbisfile	simage_oggvorbis_reader.c	/^  OggVorbis_File vorbisfile;$/;"	m	struct:__anon10	file:	access:public
w	simage_rgb.c	/^  int w;$/;"	m	struct:__anon11	file:	access:public
w	simage_tiff.c	/^  uint32 w, h;$/;"	m	struct:__anon12	file:	access:public
warn_callback	simage_png.c	/^warn_callback(png_structp ps, png_const_charp pc)$/;"	f	file:	signature:(png_structp ps, png_const_charp pc)
weight	resize.c	/^  float weight;$/;"	m	struct:__anon6	file:	access:public
width	avi_encode.c	/^  int width;$/;"	m	struct:__anon9	file:	access:public
width	simage_jasper.c	/^  int width;$/;"	m	struct:__anon16	file:	access:public
width	simage_quicktime.c	/^  size_t width;$/;"	m	struct:__anon8	file:	access:public
write_short	simage_rgb.c	/^write_short(FILE * fp, unsigned short val)$/;"	f	file:	signature:(FILE * fp, unsigned short val)
xsize	resize.c	/^  int xsize;            \/* horizontal size of the image in Pixels *\/$/;"	m	struct:__anon5	file:	access:public
xwd_loader	simage.c	/^static loader_data xwd_loader;$/;"	v	file:
xwderror	simage_xwd.c	/^static int xwderror = XWD_NO_ERROR;$/;"	v	file:
ysize	resize.c	/^  int ysize;            \/* vertical size of the image in Pixels *\/$/;"	m	struct:__anon5	file:	access:public
zoom	resize.c	/^zoom(Image * dst,               \/* destination image structure *\/$/;"	f	file:	signature:(Image * dst, Image * src, float (*filterf)(float), float fwidth)
